{"version":3,"sources":["webpack:///./src/components/Templates/Starter/Pagination.js","webpack:///./src/templates/Starter/blog-post.js"],"names":["Pagination","numPages","currentPage","content","lastLink","push","className","to","parseInt","map","item","BlogPost","render","posts","this","props","data","allMarkdownRemark","edges","pageContext","title","node","style","width","fields","slug","frontmatter","date","excerpt","tags","tag","i","console","log","timeToRead","React","Component","blogListQuery"],"mappings":"6QAGaA,EAAa,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,YAC9BC,EAAU,GAGd,GAAoB,IAAhBD,EAAmB,CACnB,IAAME,EAA2B,IAAhBF,EAAA,cAAmCA,EAAY,GAChEC,EAAQE,KACJ,6BACI,uBAAGC,UAAU,iBAAgB,kBAAC,OAAD,CAAMC,GAAIH,GAAV,qBAIrCD,EAAQE,KAAK,+BAcjB,OAVAF,EAAQE,KAAK,yBAAKC,UAAU,eAAf,QAAmCJ,IAG5CA,EAAcD,GACdE,EAAQE,KACJ,6BACI,uBAAGC,UAAU,4BAA2B,kBAAC,OAAD,CAAMC,GAAE,SAAWC,SAASN,IAA5B,gBAKhD,yBAAKI,UAAU,yBAEPH,EAAQM,KAAI,SAAAC,GACR,OAAOA,OCzBNC,E,kGACnBC,OAAA,WACE,IAAMC,EAAQC,KAAKC,MAAMC,KAAKC,kBAAkBC,MADzC,EAEyBJ,KAAKC,MAAMI,YAApClB,EAFA,EAEAA,SAAUC,EAFV,EAEUA,YACjB,OACE,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAKkB,MAAM,SACRP,EAAMJ,KAAI,YAAe,IAAZY,EAAW,EAAXA,KACZ,OACE,yBAAKC,MAAO,CAACC,MAAM,SACjB,yBAAKjB,UAAU,4CACb,kBAAC,OAAD,CAAMC,GAAE,aAAec,EAAKG,OAAOC,KAA3B,SACR,0BAAMnB,UAAU,yBAAyBe,EAAKK,YAAYC,MAC1D,4BAAKN,EAAKO,UAEV,yBAAKtB,UAAU,QACb,6BAEQe,EAAKK,YAAYG,KAAKpB,KAAK,SAACqB,EAAKC,GAE7B,OADAC,QAAQC,IAAIH,GAEZ,0BAAMxB,UAAW,0BAAgC,IAAJyB,EAAQ,OAAS,KAAK,kBAAC,OAAD,CAAMxB,GAAE,SAAWuB,GAAnB,IAA4BA,QAK3G,yBAAKxB,UAAU,eACb,uBAAGA,UAAU,mCAAmCgB,MAAO,CAACC,MAAM,SAAUF,EAAKa,WAA7E,oBAQZ,kBAAC,EAAD,CAAYjC,SAAUA,EAAUC,YAAaA,M,GAnCfiC,IAAMC,WAyC/BC,EAAa","file":"component---src-templates-starter-blog-post-js-1d778088ae0ca8a40c78.js","sourcesContent":["import React from 'react';\nimport {Link} from 'gatsby'\n\nexport const Pagination = ({numPages, currentPage}) => {\n    let content = [];\n\n    // Last page\n    if (currentPage !== 1) {\n        const lastLink = currentPage === 2 ? `/` : `/blog/${currentPage-2}`;\n        content.push(\n            <div>\n                <p className=\"text-blue-500\"><Link to={lastLink}>last page</Link></p>\n            </div>\n        )\n    } else {\n        content.push(<div></div>)\n    }\n\n    // Middle page\n    content.push(<div className=\"text-center\">page {currentPage}</div>);\n\n    // Last page\n    if (currentPage < numPages) {\n        content.push(\n            <div>\n                <p className=\"text-right text-blue-500\"><Link to={`/blog/${parseInt(currentPage)}`}>next page</Link></p>\n            </div>\n        ) \n    }\n    return (\n        <div className=\"grid grid-cols-3 mt-3\">\n            {\n                content.map(item => {\n                    return item\n                })\n            }\n        </div>\n    )\n}\n\n","import React from \"react\"\nimport {graphql, Link} from \"gatsby\"\nimport '../../css/index.css';\n\nimport Layout from \"../../components/Templates/Starter/layout\";\nimport SEO from  \"../../components/Templates/Starter/seo\";\nimport {Pagination} from \"../../components/Templates/Starter/Pagination\"\n\nexport default class BlogPost extends React.Component  {\n  render() {\n    const posts = this.props.data.allMarkdownRemark.edges\n    const {numPages, currentPage} = this.props.pageContext;\n    return (\n      <Layout>\n      <SEO title=\"Home\" />\n        {posts.map(({ node }) => {\n          return (\n            <div style={{width:'100%'}}>\n              <div className=\"bg-white border border-gray-400 p-5 mt-5\">\n                <Link to={`/blog/post${node.fields.slug}index`}>\n                <span className=\"text-xs text-gray-700\">{node.frontmatter.date}</span>\n                <h3>{node.excerpt}</h3>\n                </Link>\n                <div className=\"flex\">\n                  <div>\n                      {\n                          node.frontmatter.tags.map( (tag, i) => {\n                              console.log(tag);\n                              return (\n                              <span className={\"text-gray-700 text-sm \" + (i!==0 ? \"ml-3\" : \"\")}><Link to={`/tags/${tag}`}>#{tag}</Link></span>\n                              )\n                          })\n                      }\n                  </div>\n                  <div className=\"flex flex-1\">\n                    <p className=\"text-right text-xs text-gray-600\" style={{width:'100%'}}>{node.timeToRead} min read</p>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          )\n        })}\n        <Pagination numPages={numPages} currentPage={currentPage} />\n    </Layout>\n    )\n  }\n}\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date\n            tags\n          }\n          excerpt\n          timeToRead\n        }\n      }\n    }\n  }\n`\n\n"],"sourceRoot":""}